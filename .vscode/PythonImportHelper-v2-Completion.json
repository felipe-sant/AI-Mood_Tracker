[
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "pipeline",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "translate",
        "importPath": "src.translate",
        "description": "src.translate",
        "isExtraImport": true,
        "detail": "src.translate",
        "documentation": {}
    },
    {
        "label": "translate",
        "kind": 2,
        "importPath": "src.translate",
        "description": "src.translate",
        "peekOfCode": "def translate(label):\n    stars = int(label.split()[0])\n    if stars <= 2:\n        return \"Negative\"\n    elif stars == 3:\n        return \"Neutral\"\n    else:\n        return \"Positive\"",
        "detail": "src.translate",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "index",
        "description": "index",
        "peekOfCode": "app = FastAPI()\nclassificador = pipeline(\"sentiment-analysis\", model=\"nlptown/bert-base-multilingual-uncased-sentiment\")\n@app.get(\"/mood\")\nasync def moodTracker(text: str):\n    result = classificador(text)[0]\n    feeling = translate(result['label'])\n    stars = int(result[\"label\"].split()[0])\n    return {\n        \"feeling\": feeling,\n        \"stars\": stars",
        "detail": "index",
        "documentation": {}
    },
    {
        "label": "classificador",
        "kind": 5,
        "importPath": "index",
        "description": "index",
        "peekOfCode": "classificador = pipeline(\"sentiment-analysis\", model=\"nlptown/bert-base-multilingual-uncased-sentiment\")\n@app.get(\"/mood\")\nasync def moodTracker(text: str):\n    result = classificador(text)[0]\n    feeling = translate(result['label'])\n    stars = int(result[\"label\"].split()[0])\n    return {\n        \"feeling\": feeling,\n        \"stars\": stars\n    }",
        "detail": "index",
        "documentation": {}
    }
]